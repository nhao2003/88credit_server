// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum AccountStatus {
  ACTIVE
  INACTIVE
  LOCKED
}

model User {
  id                   String        @id @default(cuid())
  role                 Role          @default(USER)
  status               AccountStatus @default(ACTIVE)
  is_identity_verified Boolean       @default(false)
  email                String        @unique
  password             String
  firstName            String
  lastName             String
  gender               Boolean
  dob                  DateTime
  phone                String
  last_active          DateTime     @default(now())
  bio                  String?
  ban_reason           String?
  ban_until            DateTime?
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  sessions             Session[]
  Otp                  Otp[]
  Post                 Post[]

  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  refreshAt DateTime @default(now())
  timestamp DateTime @default(now())

  @@map("sessions")
}

enum OtpType {
  EMAIL
  PHONE
}

enum OtpPurpose {
  PASSWORD_RESET
  EMAIL_VERIFICATION
  PHONE_VERIFICATION
  TWO_FACTOR_AUTH
}

model Otp {
  id        String     @id @default(cuid())
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  type      OtpType
  purpose   OtpPurpose
  token     String
  verifiedAt DateTime?
  expiresAt DateTime
  createdAt DateTime   @default(now())

  @@map("otps")
}

enum PostStatus {
  PENDING
  APPROVED
  REJECTED
  HIDDEN
}

enum LoanReasonTypes {
  BUSINESS
  EDUCATION
  TRAVEL
  WEDDING
  MEDICAL
  SHOPPING
  HOUSE_BUYING
  CAR_BUYING
  OTHER
}

model Post {
  id          String     @id @default(cuid())
  userId      String
  status      PostStatus @default(PENDING)
  loanReason  LoanReasonTypes
  loanReasonDescription String
  title       String
  description String
  images      String[]
  interestRate Float
  amount      Float
  duration    Int
  overdueInterestRate Float
  maxInterestRate Float?
  maxAmount   Float?
  maxDuration Int?
  maxOverdueInterestRate Float?
  rejectionReason String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  user        User       @relation(fields: [userId], references: [id])
  @@map("posts")
}
